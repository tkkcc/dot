set automatically_count_files false
set autosave_bookmarks true
set autoupdate_cumulative_size false
set cd_bookmarks false
set cd_tab_case smart
set cd_tab_fuzzy true
set clear_filters_on_dir_change true
set collapse_preview true
set colorscheme default
set column_ratios 1,1
set confirm_on_delete never
set dirname_in_tabs true
set display_size_in_main_column true
set display_size_in_status_bar false
set display_free_space_in_status_bar true
set display_tags_in_all_columns true
set draw_borders none
set draw_progress_bar_in_status_bar false
set flushinput true
set freeze_files false
set hidden_filter ^\.|~$
set hint_collapse_threshold 1000
set hostname_in_titlebar false
set idle_delay 25500
set line_numbers false
set max_console_history_size 20
set max_history_size 20
set metadata_deep_search false
set mouse_enabled true
set open_all_images false
set padding_right false
set preview_directories false
set preview_files false
set preview_images true
set preview_images_method w3m
set preview_max_size 0
set preview_script ~/.config/ranger/scope.sh
set save_backtick_bookmark true
set save_console_history true
set save_tabs_on_exit false
set scroll_offset 8
set shorten_title 3
set show_cursor false
set show_hidden false
set show_hidden_bookmarks true
set show_selection_in_titlebar false
set sort natural
set sort_case_insensitive true
set sort_directories_first true
set sort_reverse false
set sort_unicode false
set status_bar_on_top false
set tilde_in_titlebar true
set unicode_ellipsis false
set update_title false
set update_tmux_title false
set use_preview_script true
set vcs_aware false
set vcs_backend_bzr disabled
set vcs_backend_git enabled
set vcs_backend_hg disabled
set viewmode miller
set wrap_scroll false
set xterm_alt_key false

alias q    quit
alias filter     scout -sltrp
alias find       scout -slt
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefiklst
map Q quitall
map q quit
map R     reload_cwd
map <c-r> reset
map <c-c> abort
map <esc> change_mode normal
map i display_file
map ? help
map W display_log
map w taskview_open
map s chain shell $SHELL; eval fm.cd(open(os.environ['E']+'/rangerdir').readline().strip())
map :  console
map ;  console
map @  console -p6 shell  %%s
map f  console find%space
map cd console cd%space
map Mf linemode filename
map Mi linemode img
map Mm linemode mtime
map Mp linemode permissions
map Ms linemode sizemtime
map Mt linemode metatitle
map <space> mark_files toggle=True
map v       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map V       toggle_visual_mode
map <up>       move up=1
map <down>     move down=1
map <left>     move left=1
map <right>    move right=1
map <home>     move to=0
map <end>      move to=-1
map <pagedown> move down=1   pages=True
map <pageup>   move up=1     pages=True
map <cr>       move right=1
copymap <up>       k
copymap <down>     j
copymap <left>     h
copymap <right>    l
copymap <home>     gg
copymap <end>      G
map J  move down=0.5  pages=True
map K  move up=0.5    pages=True
copymap J <c-d>
copymap K <c-u>
map H     history_go -1
map L     history_go 1
map ]     move_parent 1
map [     move_parent -1
map gh cd ~
map gt cd ~/.local/share/Trash/files
map ge cd /etc
map gu cd /usr
map gd cd /dev
map go cd /opt
map gv cd /var
map gm cd /media
map gM cd /mnt
map gs cd /srv
map gr cd /root
map gR eval fm.cd(ranger.RANGERDIR)
map g/ cd /
map yp copypath -p
map yd shell -s echo -n %d   |yank>/dev/tty
map yn copypath -n
map yl shell -s echo -n $(readlink %f)|yank>/dev/tty
map a  rename_append
map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)
map pp paste
map po paste overwrite=True
map pP paste append=True
map pO paste overwrite=True append=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True
map phl paste_hardlink
map pht paste_hardlinked_subtree
map dd cut
map ud uncut
map da cut mode=add
map dr cut mode=remove
map dt cut mode=toggle
map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
map yt copy mode=toggle
map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)
map /  console search%space
map n  search_next
map N  search_next forward=False
map ct search_next order=tag
map cs search_next order=size
map ci search_next order=mimetype
map cc search_next order=ctime
map cm search_next order=mtime
map ca search_next order=atime
map <a-l> tab_move 1
map <a-h>  tab_move -1
map gt        tab_move 1
map gT        tab_move -1
map gn        tab_new ~
map gc        tab_close
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9
map or set sort_reverse!
map oz set sort=random
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False
map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True
map zc    set collapse_preview!
map zd    set sort_directories_first!
map zh    set show_hidden!
map <c-h> set show_hidden!
map zI    set flushinput!
map zi    set preview_images!
map zm    set mouse_enabled!
map zp    set preview_files!
map zP    set preview_directories!
map zo    chain set preview_directories!;set preview_files!
map zs    set sort_case_insensitive!
map zu    set autoupdate_cumulative_size!
map zv    set use_preview_script!
map `<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any
map r  chain draw_possible_programs; console open_with%space
map m<bg>   draw_bookmarks
unmap <backspace>
copymap m<bg>  um<bg> `<bg> '<bg>
eval for arg in "rwxXst": cmd("map =u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map =g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map =o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map =a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map ={0}  shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <esc>   eval fm.ui.console.close()
cmap <cr>    eval fm.ui.console.execute()
cmap <c-l>   redraw_window
copycmap <esc> <c-c>
copycmap <cr>  <c-j>
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
cmap <a-left>   eval fm.ui.console.move_word(left=1)
cmap <a-right>  eval fm.ui.console.move_word(right=1)
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <c-w>        eval fm.ui.console.delete_word()
cmap <c-q>        eval fm.ui.console.delete_word()
cmap <a-d>        eval fm.ui.console.delete_word(backward=False)
cmap <c-k>        eval fm.ui.console.delete_rest(1)
cmap <c-u>        eval fm.ui.console.delete_rest(-1)
cmap <c-y>        eval fm.ui.console.paste()
copycmap <up>        <c-p>
copycmap <down>      <c-n>
copycmap <left>      <c-b>
copycmap <right>     <c-f>
copycmap <home>      <c-a>
copycmap <end>       <c-e>
copycmap <delete>    <c-d>
copycmap <backspace> <c-h>
copycmap <backspace> <backspace2>
cmap <allow_quantifiers> false
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <c-d>       pager_move  down=0.5  pages=True
pmap  <c-u>       pager_move  up=0.5    pages=True
copypmap <up>       k  <c-p>
copypmap <down>     j  <c-n> <cr>
copypmap <left>     h
copypmap <right>    l
copypmap <home>     g
copypmap <end>      G
copypmap <c-d>      d
copypmap <c-u>      u
copypmap <c-u>      e
copypmap <pagedown> n  f  <c-f>  <space>
copypmap <pageup>   p  b  <c-b>
pmap     <c-l> redraw_window
pmap     <esc> pager_close
copypmap <esc> q Q i <f3>
pmap E      edit_file
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <c-d>       taskview_move down=0.5  pages=True
tmap <c-u>       taskview_move up=0.5    pages=True
copytmap <up>       k  <c-p>
copytmap <down>     j  <c-n> <cr>
copytmap <home>     g
copytmap <end>      G
copytmap <c-u>      u
copytmap <pagedown> n  f  <c-f>  <space>
copytmap <pageup>   p  b  <c-b>
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()
tmap <c-l> redraw_window
tmap <esc> taskview_close
copytmap <esc> q Q w <c-c>
map D shell -s trash-put -- %s
map dD delete %s
map dS shell -s sudo rm -rf -- %s
map e chain get_cumulative_size;mark_files all=True val=False
map ,n console touch%space
map ,m console mkdir%space
map ,b bulkrename
map <c-f> fzf_select
map ,l console flat%space
map ,i console filter%space
map ,c shell code .
map ,g set vcs_aware!
map ,x cut
map ,v paste
map t shell -f $T -e $SHELL -C "cd %d"
map <tab>     eval fm.tab_move(1) if len(fm.tabs)>1 else fm.tab_new()
map <s-tab>   tab_move -1
map gm cd /media/bilabila
map ,u shell um %d/%f
map <a-u> shell lsblk -lno NAME,MOUNTPOINT|grep -v 'nvme'|cut -d' ' -f2|dmenu|um
map <c-d> shell dragon-drag-and-drop -a -x %p
#map ,5 shell -f echo -n $(md5sum %)
#map ,z  eval fm.open_console('shell zip -yr '+str(fm.thisdir.get_selection()[0].relative_path)+'.zip %s', position=-7)
#map ,t eval fm.open_console('shell tar cvf '+str(fm.thisdir.get_selection()[0].relative_path)+'.tar %s',position=-7)
#map ,g eval fm.open_console('shell tar czvf '+str(fm.thisdir.get_selection()[0].relative_path)+'.tar.gz %s',position=-10)
map ,z eval fm.open_console('shell apack \''+str(fm.thisdir.get_selection()[0].relative_path)+'\'.zip %s',position=-7)
map ,f eval fm.open_console('shell -p ag --color --group -- ')
map ,b shell mmv %s
map i console filter%space
